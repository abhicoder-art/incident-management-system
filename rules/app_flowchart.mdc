# Application Flowchart

## User Authentication Flow
```mermaid
flowchart TD
    A[User Visits App] --> B{Is Authenticated?}
    B -->|No| C[Login/Signup Page]
    C --> D[Enter Credentials]
    D --> E{Valid Credentials?}
    E -->|No| D
    E -->|Yes| F[Main Application]
    B -->|Yes| F
```

## Incident Management Flow
```mermaid
flowchart TD
    A[Main Application] --> B{Select Action}
    B -->|View List| C[Fetch Incidents]
    B -->|Create New| D[Incident Form]
    B -->|View Details| E[Fetch Single Incident]
    
    C --> F[Display Incident List]
    F -->|Click Incident| E
    
    D -->|Submit| G{Validate Input}
    G -->|Invalid| D
    G -->|Valid| H[Save to Database]
    H --> C
    
    E --> I[Display Incident Details]
```

## Data Flow Architecture
```mermaid
flowchart LR
    A[React Frontend] -->|HTTP Requests| B[Express Backend]
    B -->|Query Data| C[Supabase Database]
    C -->|Return Data| B
    B -->|JSON Response| A
```

## Error Handling Flow
```mermaid
flowchart TD
    A[User Action] --> B{API Request}
    B -->|Network Error| C[Show Retry Dialog]
    B -->|Auth Error| D[Redirect to Login]
    B -->|Validation Error| E[Show Form Errors]
    B -->|Server Error| F[Show Error Message]
    
    C -->|Retry| B
    D --> G[Login Flow]
    E --> H[User Fixes Input]
    H --> B
```

## Component Hierarchy
```mermaid
flowchart TD
    A[App] --> B[Router]
    B --> C[Auth Component]
    B --> D[IncidentList]
    B --> E[IncidentDetail]
    D --> F[IncidentCard]
    E --> G[StatusBadge]
    E --> H[PriorityBadge]
``` 