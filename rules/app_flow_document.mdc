# Application Flow Document

## Overview
This document outlines the flow of data and user interactions in the Incident Management System.

## User Flows

### 1. Authentication Flow
1. User arrives at the application
2. If not authenticated:
   - Redirected to `/auth` page
   - Can sign in or sign up
   - Upon successful authentication, redirected to home page
3. If authenticated:
   - Shown the main application interface
   - Can access all protected routes

### 2. Incident Management Flow

#### Viewing Incidents
1. User clicks on "Incidents" tab in navigation
2. System fetches incidents from Supabase via backend API
3. Displays list of incidents with:
   - Title
   - Description preview
   - Status badge
   - Priority badge
   - Creation date

#### Viewing Incident Details
1. User clicks on an incident from the list
2. System fetches detailed incident information
3. Displays full incident details including:
   - Complete description
   - Status
   - Priority
   - Assigned person
   - Resolution (if available)
   - Creation and update timestamps

#### Creating New Incidents
1. User clicks "Create New Incident" button
2. System displays incident creation form
3. User fills in required information:
   - Title
   - Description
   - Status
   - Priority
   - Assigned person (optional)
4. System validates input
5. On submission:
   - Data sent to backend API
   - Stored in Supabase
   - User redirected to incident list
   - List automatically refreshes

## Data Flow

### Frontend → Backend
- Authentication requests (handled by Supabase Auth)
- API requests for incidents:
  - GET /api/incidents (list)
  - GET /api/incidents/:id (details)
  - POST /api/incidents (create)

### Backend → Database
- Supabase client handles:
  - Data validation
  - Row Level Security (RLS)
  - CRUD operations on incidents table

## Error Handling
1. Network errors: Displayed to user with retry option
2. Authentication errors: Redirect to login
3. Data validation errors: Shown inline with form fields
4. Server errors: Generic error message with error logging 